.. _introduce_moby:

=================
MoBy开源项目集
=================

`Mobyproject <https://mobyproject.org>`_ 是一个用于装配容器系统的开源框架。

.. figure:: ../../_static/docker/moby/moby_project.jpg

.. note::

   ``Moby`` 这个名字可能和一部著名的美国小说 `Moby Dick (白鲸) <https://www.zhihu.com/question/264718711>`_ 有关: 这是一部受到和捕鲸人抗争48年的雄性抹香鲸Mocha Dick启发的美国经典小说，作者是赫尔曼·麦尔维尔，被誉为美国的“莎士比亚”。

很多人都觉得docker非常好用，一条简单的 ``docker run`` 命令就可以运行容器， ``docker build`` 就可以构建一个镜像。然而，"一生二，二生三，三生万物"，那么最初的原始镜像以及分发构建和编排系统是怎么产生的呢？

Moby就是这样一个 "Under the hood" (隐藏在魔法帽下) 的开源项目。是的，如果说Docker是一个神奇的魔法，那么要揭开本质，你需要了解Moby。

Moby提供了一系列标准组件和一个将这些组件组装成定制平台的框架。在Moby的核心是一个组装定制容器的系统，提供了：

* 组件(Components) - 容器化的组件库，用于所有面向容器的系统：操作系统，容器运行时，容器编排，架构管理，网络，存储，安全，构建，镜像分发，等等
* 工具(Tools) - 用于见给组件组装成可运行的适合不同平台的成品以及架构：裸金属(x86或则Arm)；可以运行在Linux, Mac和Windows；针对流行的云计算厂商和虚拟化服务商。
* 装配(Assemblies) - 一系列参考的组装可以用于直接使用，修改或者启发你创建自己的组合。所有的Moby组件都是容器化的，所以创建一个新的组件就像构建一个新的OCI兼容的容器一样方便

Moby是为哪些需要构建自己的容器基础系统的技术工作者提供的工具：

* Hacker可以自己定制或patch自己的Docker build
* 系统工程师可以构建一个容器系统
* 架构师可以查看和修改现有的容器系统以适应自己的环境
* 容器爱好者可以实验最新的容器技术
* 开源开发这可以在不同平台查看和测试自己的项目

但是Moby并不适合以下用户:

* 不适合那些寻找简单方法在容器中运行应用的应用开发者。应用开发者建议使用Docker CE
* 如果企业IT或开发团队寻找一种即时可用、商业支持的容器平台，也不适合使用Moby，而应该使用Docker EE

Moby项目集
============

- :ref:`containerd`
- :ref:`runc`
- :ref:`linuxkit`
- :ref:`infrakit`

