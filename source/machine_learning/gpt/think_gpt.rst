.. _think_gpt:

=================
GPT之思
=================

2023年开始，ChatGPT 3.5到GPt-4，AIGC(AI内容生成)突然间成为引爆业内外的热点，大模型训练后的推理能力，能够完成文字到图形和视屏的双向转换，理解问答，解题和编程。似乎一瞬间， :ref:`machine_learning` 展现出的恐怖能力即将替代我们普通工作者绝大多数岗位。

震惊么？恐惧么？

确实，对于我这样普通的IT工作者而言，大多数能力确实有可能在很短时间内被这种汇聚了历史海量数据训练出的AIGC所打败，但是有没有可能我们自己向前进化，超越并驾驭这场AI狂潮呢？

谁更容易被淘汰
===============

2025年，大语言模型技术突破感觉放缓，大家依然在卷解题和编码，刷各种榜单。不过，考虑到AIGC可能最先在编程方面产品化，这就对我所在的行业有比较深远影响。或者说，编程领域的危机可能最先爆发。

纽约时报7月的报道 `谁更有可能被人工智能取代：新手还是资深员工？ <https://cn.nytimes.com/technology/20250710/ai-job-cuts>`_ 提出了痛苦、尖锐而无法逃避的问题: 像我这样的技术工作者，还有没有未来?

- 人工智能工具似乎对中级开发人员更为有利:

  - 初级开发只能更快完成工作，但是缺乏审查和改进能力
  - 中级开发在人工智能的强化帮助下能够上探高级员工的稀缺技能，下能减少对初级开发的协作需求

- 但是更高的工资和不愿接受人工智能的结合可能会让经验丰富的程序员面临失业风险

- 不同行业人工智能影响的层级不同，律师行业会的初级员工可能影响较小，反而使得多年经验的合同律师失去了工作(人工智能使得初级人员也具备了跨行业的技术经验，能够处理不同行业的合同)

知己知彼
===========

在我有限的 :ref:`machine_learning` 知识，以及在这个行业中，多少关注技术新闻以及和从事这方面工作的同事交流，对于目前的GPT技术:

- GPT是通过大量的历史数据训练获得的推理能力: 机器并不理解原理(或者说我们至今还不知道为何大量数据的概率能够展现出准确性)，而是通过海量的文档、图片，预测下一个字符或者色点应该是什么

  - 神奇的概率啊，为何海量的文本就能知道下一个文字是什么呢?
  - 目前我觉得AIGC通过概率推理出正确答案，可能只是因为目前探索的领域(绘画、视屏、计算机编程)，人类累积了无数重复相似的资料，所以通过海量数据训练能够让GPT能够通过 **概率** 从上文推理出下一个字符；但是如果是很少有人从事的工作，例如少有人开发的程序逻辑，则GPT会失误

- GPT的惊人能力的核心是概率，但是短板可能也是概率:

  - 就目前而言，GPT只能根据历史数据来训练，通过海量数据的概率来推理出结果: 既然是概率，就有一定的错误可能性，对于艺术类(包括文学)本身无绝对准确的要求，所以GPT可以替代大多数工作，但是对于以准确精度要求的技术领域，GPT还需要专业技能的人来判断
  - 目前应该还没有破解出AI的真正奥义，我们还不能解释海量数据的训练得到的GPT能力的原因，为何有些参数是优化有些是恶化；所以在一段时间内，GPT的出错概率可能还不能满足高精度技术领域要求(但是这个时间有多久不好说)
  - **不过我很担心我们自己的推理能力是不是也是生物意义上的概率，只不过是自然进化赋予我们生物本能的概率判断** ，有没有可能我们还不知道自己的能力就是进化得来的概率本能

- 也许今后只要人类创造过的东西， :ref:`machine_learning` 通过输入这些历史数据都能重复实现，你或许说那我们人就专注于创造，让机器来学习我们的创造完成重复的类似的工作:

  - 大多数像我这样普通的人，或许有时有天马行空的想法，但是缺乏将想法实现的能力、财力和精力；从小受到的训练都是社会分工下的狭窄领域的技能
  - 就目前而言， :ref:`machine_learning` 需要数学和计算机领域极深的造诣，大多数人包括我惊叹于其魔力而难以掌握底层的真正能力

未来世界的幸存者
=================

目前我想象中在未来可能的生存方式:

- 努力拥抱技术变革，不要拒绝(拒绝也没有用)，学习 :ref:`machine_learning` ，至少在工程上能够掌握基本原理和实现，能够自己训练和推理，辅助自己提高工作能力
- 通过GPT来训练自己的编程能力，使得自己能够作为AIGC的判断者: 可能在一段时间内，通过GPT叠加GPT方式来提高准确度精度在技术和成本上难以实现，这或许是我们技术工作者的价值所在(假如AI技术没有再次突破)
- 学习更多领域知识融汇贯通，并且能和他人够协作交流: 目前单一领域的机器学习比较容易实现，很多公司都在细分领域训练AIGC，但是融汇贯通难度较大，暂时可能还不被AIGC替代

随着GPT(AIGC)技术的发展，特别是训练、推理成本不断下降，有可能会比人工(类似最后的判断者)更为经济，作为普通人的压力会越来越大。所以，个人需要掌握这项技术并且能够以普通人的资源抗衡 `利维坦 <https://zh.wikipedia.org/wiki/%E5%88%A9%E7%BB%B4%E5%9D%A6_(%E9%9C%8D%E5%B8%83%E6%96%AF)>`_ 的压迫。

保持技术手感
-----------------

正如 `对话 Ruby on Rails 之父：发自内心恨透 Copilot，手凿代码才是程序员的乐趣 <https://mp.weixin.qq.com/s/0y4a_c0P4O_sjJAYSYoQ6w>`_ David Heinemeier Hansson (DHH) 的观点:

- 他并非一个简单的 AI 拥护者或反对者，他承认每天都在使用 AI 来学习新知
- 但同时，他为 AI 编程助手可能导致的核心技能退化而深感忧虑。他将其描述为一种“能力从指尖流失”的感觉，并表示自己“恨透”了 AI

我非常赞同DHH的观点，并且想要学习他:

- 不使用工具来编写代码: 用文本编辑器。我用双手将代码从屏幕上“凿”出来。不使用自动补全，不使用任何试图猜测我下一步想做什么的东西。我希望我的手指能记住这些方法。我希望我的大脑能记住这些模式。
- **这是一种……与材料的亲密接触。就像一个木匠，他需要感受木头的纹理。如果我让机器为我完成所有的输入工作，我就会失去这种感觉。**

DHH对AI编程的观点:

- AI编程的局限性:

  - 它让我感觉自己像个监督者，而不是一个创造者。我的工作变成了不断地纠正一个过于热心的实习生。它会生成一大堆代码，然后我的任务就是，"不，这不是我想要的。这个地方不对。那里有个 bug。"
  - 我能真切地感觉到能力从我的指尖流失。那种与材料的直接接触感消失了。我不再是那个"凿"代码的人了。我成了一个代码的审查员。这对我来说，是一种深刻的、存在的失落感。编程的乐趣，对我来说，很大一部分在于思考和输入的那个过程。Copilot 把这个过程拿走了，用一种肤浅的、即时的满足感来替代它。
  - AI生产力: 这取决于你如何定义“生产力”。如果你所谓的生产力是“每小时写的代码行数”，那么是的，它可能会提高。但我不认为这是一个有意义的指标。对我来说，真正的生产力是关于“思考的质量”。是关于找到那个最简洁、最优雅的解决方案。

- 如何使用AI编程:

  - AI作为一个学习工具有着巨大的潜力: 可以快速进入不熟悉的领域(库、语言)，通过AI生成的例子来修改、理解和学习新的知识。
  - 但是不要让AI代替我思考，只是用它作为一个起点来加速我的学习过程
  - 我每天都因为 AI 而变得更聪明，因为我用它来给我解释东西，用最简单的方式为我解释那些我本该知道但实际上并不知道的 Unix 命令。这是一个了不起的教育工具。
  - 但当我坐下来，准备进入“创造模式”，准备构建一些重要的、持久的东西时，我会把它关掉。因为在那个时刻，我需要的是深度专注，是我和代码之间的直接对话，我不希望有任何东西插在中间。

.. note::

   当然，DHH是我们编程领域的高手，普通开发者可能达不到他这种自由编程的境界。但是他的学习方法以及编程习惯值得借鉴。我们是人类，我们需要不断的自我训练才能保持技术的敏感和手感。

.. note::

   强烈推荐阅读 `对话 Ruby on Rails 之父：发自内心恨透 Copilot，手凿代码才是程序员的乐趣 <https://mp.weixin.qq.com/s/0y4a_c0P4O_sjJAYSYoQ6w>`_ 原文。DHH是一个观点鲜明的有思想的开源领导者，他创建了著名的 ``37Signnals`` 公司，一家独立的小而美的公司，并和他的合伙人Jeson Fried将创建公司的理念编写成 `Rework系列书籍 <https://book.douban.com/subject/5320866/>`_
